
# 로컬 환경에서 개발 진행시 Spring 에게 local properties를 쓰게 지시 
spring.profiles.active=local

# JSP 
spring.mvc.view.prefix:/WEB-INF/
spring.mvc.view.suffix=.jsp

# MyBatis Locations
mybatis.mapper-locations=classpath:/mappers/*.xml

# Sql Query Debug
logging.level.org.mybatis=debug
# logging.level.org.mybatis=info

# Springframework Logging 
logging.level.org.springframework=info

# MyBatis Logging Level 
logging.level.board.mybatis.mvc=debug

# Security Logging 
logging.level.org.springframework.boot.autoconfigure.security=info
# logging.level.org.springframework.security=trace

# Port 
server.port=8084

# 업로드 파일 엔진엑스 경로와 사이즈 (Local Nginx)
# spring.servlet.multipart.enabled=true
# spring.servlet.multipart.location=/opt/homebrew/var/www
# spring.servlet.multipart.max-request-size=30MB
# spring.servlet.multipart.max-file-size=10MB
# # 업로드 파일 엔진엑스 경로 (Local Nignx)
# org.kwon.upload.path=/opt/homebrew/var/www

# 업로드 파일 엔진엑스 경로와 사이즈 (Docker Nginx)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=/var/www/upload
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB
# 업로드 파일 엔진엑스 경로 (Docker Nginx)
org.kwon.upload.path=/var/www/upload


# 카카오 
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8084/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-id=0c51c8934055f8e28462b6d5cc17be9a

spring.security.oauth2.client.registration.kakao.client-secret=Bzff2N2SK9fH8y9DDc2tOTjJH8pT5Qgy
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email

# 레디스 (1대 서버 일때만)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.cache.type=redis

# Redis Sentinel 구성
spring.redis.sentinel.master=mymaster
# 무조건 Docker 내부의 IP 기준 
spring.redis.sentinel.nodes=redis-sentinel:26379

# 레디스 로깅 Trace 
logging.level.org.springframework.cache=trace

# MySQL Master 
spring.datasource.master.jdbc-url=jdbc:mysql://host.docker.internal:3307/mysql_master?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
spring.datasource.master.username=root
spring.datasource.master.password=1111

# MySQL Slave 
spring.datasource.slave.jdbc-url=jdbc:mysql://host.docker.internal:3308/mysql_master?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul
spring.datasource.slave.username=root
spring.datasource.slave.password=1111

# 메모리 스택 증가 
org.gradle.jvmargs=-Xmx1024m -XX:MaxPermSize=256m

server.servlet.context-path=/

# 이메일 인증 
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=thistrik@gmail.com 
spring.mail.password=cnguttwkdiajkrei

spring.mail.properties.mail.smtp.auth=true

spring.mail.properties.mail.smtp.starttls.enable=true

spring.mail.properties.mail.smtp.ssl.enable=true

spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
